# Required pipeline variables:
# - WINDOWS_SKU - SKU of the image offer to use for your base image 
#   - Valid values are '2019' for '2019-Datacenter-Core-smalldisk' or '2004' for 'datacenter-core-2004-with-containers-smalldisk'
# - DRY_RUN - Set to 'False' if VHD should be copied to classic storage account in preparation for publishing
# - CONTAINER_RUNTIME - Container runtime to in for VHD - Valid values are 'containerd' or 'docker'
#
# Two sets of credentials are used to resolve timeout issue when building windows in specific tenants but recommended for classic storage account
# We can share the same credentials when no such timeout issue reported
# variables to build Windows VHD
# - BUILD_AZURE_LOCATION - Azure region to create resources in
# - BUILD_CLIENT_ID - Service principal ID
# - BUILD_CLIENT_SECRET - Service principal secret
# - BUILD_AZURE_RESOURCE_GROUP_NAME - Resource group to create temporary resources in
# - BUILD_TENANT_ID - Tenant Id used for service principal login
# - BUILD_SUBSCRIPTION_ID - Subscription ID used by the pipeline
# variables to publish the VHD blob built by packer to the destination storage account
# - CLIENT_ID - Service principal ID
# - CLIENT_SECRET - Service principal secret for copy image
# - STORAGE_ACCT_BLOB_URL - Url to blob storage container used to copy image to in preparation for publishing
# - STORAGE_ACCT_SAS_TOKEN - SAS token with permission to write to CLASSIC_BLOB container
# - SUBSCRIPTION_ID - Subscription ID used by the pipeline
# - TENANT_ID - Tenant Id used for service principal login
#
# - DEIS_GO_DEV_IMAGE - Dev container image ID
# - BUILD_POOL - Azure DevOps build pool to use
# - PACKER_VM_SIZE - VM Size to be used during packer build operation

# Two modes in prioritized order
# sigMode: Shared Image Gallery mode
#    This modes is activated when mode 1 is not activated and by setting env var SIG_GALLERY_NAME/SIG_IMAGE_NAME/SIG_IMAGE_VERSION.
#    It is similar to mode 1 except it will create a gen1 image and the SIG destination is specified by the provided env var.
#    This is good for quick testing purpose as you can use the SIG image as soon as the build is completed.
#    steps:
#    - Build VHD to a SIG gallery as specified by env var SIG_GALLERY_NAME/SIG_IMAGE_NAME/SIG_IMAGE_VERSION
#
# default mode: Hyper-Generation V1 +VHD
#    This default mode generates VHD and store it in a classic storage account. This is mainly for publishing a new VM image to Platform Image Repository(PIR) and Share Image Gallery.
#    steps:
#    - create an VHD in Packer to normal storage account
#    - copy from Packer storage account to classic storage account using AzCopy
#    - generate SAS link from azure CLI
#    - (offline)POST a new SKU to azure marketplace

phases:
  - phase: build_vhd_2019
    condition: eq('${{ parameters.build2019 }}', true)
    queue:
      timeoutInMinutes: 180
    steps:
      - bash: |
          echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
          echo '##vso[task.setvariable variable=HYPERV_GENERATION]V1'
          echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D4s_v3'
          echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]docker'
          echo '##vso[task.setvariable variable=WINDOWS_SKU]2019'
        displayName: Setup Build Variables
      - template: ./templates/.builder-release-template-windows.yaml
        parameters:
          artifactName: 2019

  - phase: build_vhd_2019_containerd
    condition: eq('${{ parameters.build2019containerd }}', true)
    queue:
      timeoutInMinutes: 180
    steps:
      - bash: |
          echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
          echo '##vso[task.setvariable variable=HYPERV_GENERATION]V1'
          echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D4s_v3'
          echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
          echo '##vso[task.setvariable variable=WINDOWS_SKU]2019-containerd'
        displayName: Setup Build Variables
      - template: ./templates/.builder-release-template-windows.yaml
        parameters:
          artifactName: 2019-containerd
